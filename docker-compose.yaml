version: '3.8'

services:
  go-app:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: songs-store-app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    command: >
      /bin/sh -c "
      /usr/local/bin/migrate -path /app/schema -database postgres://postgres:postgres@db:5432/songs-store-db?sslmode=disable up &&
      ./main
      "

  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: songs-store-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - backend/.env
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"

  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8081:8080"
    environment:
      SWAGGER_JSON: /swagger/swagger.json
    volumes:
      - ./cmd/docs:/swagger
    depends_on:
      - go-app

volumes:
  postgres_data:
  pgadmin: