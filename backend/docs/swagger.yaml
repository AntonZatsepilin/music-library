definitions:
  handler.errorResponse:
    properties:
      message:
        description: |-
          Error message
          Example: invalid request parameters
        type: string
    type: object
  handler.statusResponse:
    properties:
      status:
        description: |-
          Status message
          Example: Song created successfully
        type: string
    type: object
  models.CreateSongRequest:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  models.LyricResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      verses:
        items:
          type: string
        type: array
    type: object
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - song
    type: object
  models.SongsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Song'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  models.UpdateSongRequest:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
info:
  title: Music Library API
  version: 1.0.0
  contact: {}
paths:
  /songs:
    get:
      description: Get filtered and paginated list of songs
      parameters:
      - description: Filter by group name
        in: query
        name: group
        type: string
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: Filter by release date (YYYY-MM-DD)
        in: query
        name: releaseDate
        type: string
      - description: Search in lyrics
        in: query
        name: text
        type: string
      - description: Filter by link
        in: query
        name: link
        type: string
      - description: Sort field (group|song|releaseDate|text|link)
        in: query
        name: sort_by
        type: string
      - description: Sort order (ASC|DESC)
        in: query
        name: sort_order
        type: string
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SongsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get songs list
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Create new song with metadata
      parameters:
      - description: Song data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Create new song
      tags:
      - songs
  /songs/{id}:
    delete:
      description: Delete song by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Delete song
      tags:
      - songs
    get:
      description: Get song details by ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get song by ID
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update existing song details
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Update song
      tags:
      - songs
  /songs/{id}/lyrics:
    get:
      description: Get paginated song lyrics verses
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LyricResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get song lyrics
      tags:
      - lyrics
  /songs/generate:
    get:
      consumes:
      - application/json
      description: Generate test songs with random data
      parameters:
      - default: 1
        description: Number of songs to generate
        in: query
        maximum: 100
        minimum: 1
        name: count
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Generate fake songs
      tags:
      - songs
swagger: "2.0"
